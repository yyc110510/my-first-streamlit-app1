import streamlit as st
import random

# 혼자 할 수 있는 야외 활동 목록 (30개)
outdoor_activities_solo = [
    "등산", "자전거 타기", "피크닉", "하이킹", "런닝", "조깅", "사진 찍기", "별 보기", 
    "드라이브", "산책", "바다에서 수영", "어드벤처 스포츠", "스키", "스노우보드", 
    "카약 타기", "산악 자전거 타기", "캠핑", "낚시", "클라이밍", "해양 스포츠", 
    "자연 탐방", "버드와칭", "지질 공원 탐험", "강가에서 명상", "자전거 여행", 
    "자연 속 책 읽기", "오토바이 여행", "로드 트립", "별자리 관찰", "탐험"
]

# 다 같이 할 수 있는 야외 활동 목록 (30개)
outdoor_activities_group = [
    "축구", "배드민턴", "농구", "테니스", "피크닉", "볼링", "야구", "배구", "피트니스", 
    "패들 보드", "야외 게임", "협동 퀴즈", "레포츠 활동", "카약", "배틀로얄 게임", "전통 놀이", 
    "해변 축구", "트레킹", "MTB(마운틴 바이크)", "오토바이 레이스", "패러글라이딩", 
    "수상 스포츠", "서핑", "카포에이라", "낙지 잡기", "캠프파이어", "스포츠 클럽 활동", 
    "모터 스포츠", "패들보드", "협동 게임", "지구력 훈련"
]

# 혼자 할 수 있는 실내 활동 목록 (30개)
indoor_activities_solo = [
    "책 읽기", "영화 감상", "게임 하기", "퍼즐 맞추기", "음악 감상", "요가", "명상", 
    "그림 그리기", "DIY 프로젝트", "수공예", "자기계발 공부", "글쓰기", "실내 식물 키우기", 
    "자기 개발", "보드 게임", "프로그래밍 배우기", "레시피 실험", "새로운 언어 배우기", 
    "크로스워드 퍼즐", "온라인 수업 듣기", "자기계발 영상 시청", "블로그 운영", "디지털 일기 쓰기", 
    "스트레칭", "애니메이션 보기", "저널링", "자기 반성", "편지 쓰기", "책 리뷰 쓰기"
]

# 다 같이 할 수 있는 실내 활동 목록 (30개)
indoor_activities_group = [
    "요리", "DIY 프로젝트", "보드 게임", "온라인 게임", "영화 마라톤", "방 탈출 게임", 
    "탁구", "인형 만들기", "가상 현실 게임", "집에서 운동", "퀴즈 대회", "보드게임 대회", 
    "빨리 말하기 게임", "그룹 스터디", "레고 조립", "합창", "클래식 음악 감상", "댄스 배틀", 
    "온라인 협력 게임", "단체 게임", "피트니스 챌린지", "뮤지컬 공연 보기", "공예 활동", 
    "쿠킹 클래스", "가족 토크 시간", "파티 준비", "단체 체조", "펀 클럽", "단체 스크린 게임"
]

# 활동 방법 및 변형 방법을 미리 정의
activity_info = {
    "등산": {
        "방법": "산을 오르며 자연을 즐깁니다. 적절한 등산 장비와 충분한 물을 챙기세요.",
        "변형": "다양한 코스를 시도하거나, 캠핑을 겸해서 산에서 하룻밤을 보내보세요."
    },
    "자전거 타기": {
        "방법": "자전거를 타고 자연을 탐험하며 운동을 합니다.",
        "변형": "자전거를 타고 길을 떠나는 여행을 해보세요. 더 긴 경로에 도전하거나 친구와 함께 레이스를 해도 재미있습니다."
    },
    "피크닉": {
        "방법": "도시 공원이나 자연 속에서 음식을 나누며 여유로운 시간을 즐깁니다.",
        "변형": "게임을 함께 즐기거나 다양한 음식을 준비해보세요. 피크닉 매트를 대신해 텐트를 설치할 수도 있습니다."
    },
    "축구": {
        "방법": "두 팀으로 나누어 공을 차며 목표를 향해 경기를 합니다.",
        "변형": "시간을 정해놓고, 점수를 더 많이 얻은 팀이 승리하는 방식으로 시간을 정해두고 할 수 있습니다."
    },
    "보드 게임": {
        "방법": "친구나 가족과 함께 보드 게임을 즐깁니다.",
        "변형": "게임 규칙을 변경하여 새로운 방식으로 게임을 진행할 수 있습니다. 예를 들어, 패널티 점수를 추가하여 더 긴장감을 높일 수 있습니다."
    },
    "책 읽기": {
        "방법": "편안한 공간에서 좋아하는 책을 읽습니다.",
        "변형": "책을 읽고, 책의 내용을 바탕으로 토론을 해보거나, 관련 영화를 함께 보는 것도 재미있습니다."
    },
    "요리": {
        "방법": "음식을 만들며 창의성을 발휘합니다. 주재료를 고르고, 레시피에 맞춰 음식을 만듭니다.",
        "변형": "요리할 때 다른 국가의 전통 요리를 시도하거나, 테마에 맞춰 요리를 준비해보세요."
    },
    "하이킹": {
        "방법": "산이나 숲을 걸으며 자연을 느낍니다.",
        "변형": "친구와 함께 야경 하이킹을 시도해보세요. 또한, 미니 게임을 하며 하이킹을 더 재밌게 만들 수 있습니다."
    },
    "런닝": {
        "방법": "좋은 날씨에 자연 속에서 달리며 체력을 단련합니다.",
        "변형": "러닝 중에 친구와 함께 레이스를 하거나, 특정 목적지까지 달리는 목표를 설정하면 더 재밌습니다."
    },
    "조깅": {
        "방법": "자유로운 속도로 조용히 걸으면서 체력을 키웁니다.",
        "변형": "자주 가는 루트를 변경하거나, 도전 목표를 설정하여 목표 달성을 유도할 수 있습니다."
    },
    "사진 찍기": {
        "방법": "자연을 돌아다니며 아름다운 순간을 카메라에 담습니다.",
        "변형": "사진을 테마별로 찍어보거나, 셀카 대신 동영상 촬영을 시도해보세요."
    },
    "별 보기": {
        "방법": "밤하늘을 바라보며 별자리를 관찰합니다.",
        "변형": "별자리를 찾아가며 그에 얽힌 신화를 배우거나, 별을 촬영해보는 것도 재미있습니다."
    },
    "드라이브": {
        "방법": "자동차를 타고 아름다운 경로를 드라이브합니다.",
        "변형": "도로 여행을 떠나거나, 가고 싶은 장소를 리스트로 만들어 순차적으로 방문하는 것도 좋습니다."
    },
    "산책": {
        "방법": "편안하게 주변을 걸으며 여유로운 시간을 보냅니다.",
        "변형": "음악을 들으면서 산책하거나, 주변의 공원에서 새로운 동식물을 발견해 보세요."
    },
    "바다에서 수영": {
        "방법": "바다에 몸을 담그며 수영합니다.",
        "변형": "다양한 수영 스타일을 시도하거나, 물속에서 게임을 즐기는 것도 좋습니다."
    },
    "어드벤처 스포츠": {
        "방법": "모험적인 스포츠를 통해 스릴을 즐깁니다.",
        "변형": "친구와 함께 다채로운 스포츠를 시도하거나, 도전 과제를 설정해 보는 것도 좋습니다."
    },
    "스키": {
        "방법": "눈 위에서 스키를 타며 겨울 스포츠를 즐깁니다.",
        "변형": "스키를 타는 동안 사진을 찍거나, 스키 장비를 사용한 새로운 스타일을 시도해 보세요."
    },
    # 추가적인 활동들에 대해서도 방법과 변형을 정의할 수 있습니다.
}

# 활동 추천 함수 (3개씩 추천)
def recommend_activity(choice, type_of_activity):
    if choice == "야외":
        if type_of_activity == "혼자":
            return random.sample(outdoor_activities_solo, 3)
        else:
            return random.sample(outdoor_activities_group, 3)
    elif choice == "실내":
        if type_of_activity == "혼자":
            return random.sample(indoor_activities_solo, 3)
        else:
            return random.sample(indoor_activities_group, 3)
    else:
        return "잘못된 선택입니다. '야외' 또는 '실내'를 선택해주세요."

# 앱 UI
st.title("활동 추천 앱")  # 제목
st.header("어떤 활동을 원하시나요?")  # 헤더

# 사용자가 선택할 수 있는 라디오 버튼
user_choice = st.radio("활동 장소 선택", ("야외", "실내"))
activity_type = st.radio("혼자 또는 다 같이?", ("혼자", "다 같이"))

# 추천 버튼을 클릭했을 때 활동 추천
if st.button("추천 받기"):
    activities = recommend_activity(user_choice, activity_type)
    st.subheader("추천된 활동들:")
    for activity in activities:
        st.write(f"- {activity}")
    
    # 추천된 활동 중 하나 클릭하면 방법과 변형 보여주기
    selected_activity = st.selectbox("추천된 활동을 클릭하여 방법과 변형을 보세요", activities)
    if selected_activity:
        st.subheader(f"{selected_activity} 방법:")
        st.write(activity_info[selected_activity]["방법"])
        st.subheader(f"재밌게 하는 변형 방법:")
        st.write(activity_info[selected_activity]["변형"])
